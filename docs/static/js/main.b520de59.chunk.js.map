{"version":3,"sources":["login.js","App.jsx","index.js"],"names":["users","user","pass","check","arr","username","password","map","obj","checkUser","reduce","status","value","login","a","Promise","resolve","reject","setTimeout","Math","floor","random","App","useState","showForm","setShowForm","error","setError","setUsername","setPassword","passwordVerif","setPasswordVerif","isLogged","setIsLogged","switchForm","e","preventDefault","parseInt","target","href","split","handleLogin","length","success","className","onSubmit","htmlFor","type","name","id","onChange","onClick","errors","match","filter","_","idx","join","render","document","getElementById"],"mappings":"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","file":"static/js/main.b520de59.chunk.js","sourcesContent":["const users = [\n    { user: \"alex\", pass: \"1234\" },\n    { user: \"cipi\", pass: \"qwerty\" },\n];\n\nconst checkUser = (obj, user, pass) => obj.user === user && obj.pass === pass;\nconst check = (arr, username, password) =>\n    arr\n        .map((user) => checkUser(user, username, password))\n        .reduce((status, value) => status || value, false);\n\nexport const login = async ({ username, password }) =>\n    new Promise((resolve, reject) =>\n        setTimeout(() => {\n            if (check(users, username, password)) {\n                resolve(true);\n            } else {\n                reject(false);\n            }\n        }, Math.floor(Math.random() * 1500) + 500)\n    );\n","import { useState } from \"react\";\nimport { login } from \"./login\";\n\nconst App = () => {\n    const [showForm, setShowForm] = useState(1);\n    const [error, setError] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordVerif, setPasswordVerif] = useState(\"\");\n    const [isLogged, setIsLogged] = useState(false);\n\n    const switchForm = (e) => {\n        e.preventDefault();\n        setShowForm(parseInt(e.target.href.split(\"-\")[1], 10));\n    };\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n\n        if (!username.length) {\n            setError(\"Please provide a username\");\n            setUsername(\"\");\n            setPassword(\"\");\n            setPasswordVerif(\"\");\n        }\n\n        if (!password.length) {\n            setError(\"Please provide a password\");\n            setUsername(\"\");\n            setPassword(\"\");\n            setPasswordVerif(\"\");\n        }\n\n        try {\n            let success = await login({ username, password });\n            setIsLogged(success);\n            setShowForm(0);\n            setError(\"\");\n            setPassword(\"\");\n            setPasswordVerif(\"\");\n        } catch (error) {\n            setError(\"Invalid username or password\");\n            setUsername(\"\");\n            setPassword(\"\");\n            setPasswordVerif(\"\");\n        }\n    };\n\n    const handleFirstPassword = (e) => {\n        e.preventDefault();\n\n        const errors = [\n            e.target.value.length < 8,\n            e.target.value.match(/[0-9]/g) === null,\n            e.target.value.match(/[a-z]/g) === null,\n            e.target.value.match(/[A-Z]/g) === null,\n            e.target.value.match(/[@!#$%^&*(),./?+-]+/g) === null,\n        ];\n\n        const errorMessages = [\n            \"at least 8 characters\",\n            \"digits\",\n            \"blowercase characters\",\n            \"uppercase characters\",\n            \"special symbols\",\n        ];\n\n        if (errors.filter((e) => !!e).length !== 0) {\n            setError(\n                \"Password needs to contain \" +\n                    errorMessages.filter((_, idx) => errors[idx]).join(\", \")\n            );\n        } else {\n            setError(\"\");\n        }\n\n        setPassword(e.target.value);\n    };\n\n    const handleSecondPassword = (e) => {\n        e.preventDefault();\n\n        if (e.target.value !== password) {\n            setError(\"Passwords do not match\");\n        } else {\n            setError(\"\");\n        }\n\n        setPasswordVerif(e.target.value);\n    };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (!username.length) {\n            setError(\"Please provide a username\");\n            setUsername(\"\");\n            setPassword(\"\");\n            setPasswordVerif(\"\");\n        } else if (!password.length) {\n            if (e.target.value) setError(\"Please provide a password\");\n            setUsername(\"\");\n            setPassword(\"\");\n            setPasswordVerif(\"\");\n        } else if (!passwordVerif.length) {\n            setError(\"Please retype your password\");\n            setUsername(\"\");\n            setPassword(\"\");\n            setPasswordVerif(\"\");\n        } else {\n            setError(\"\");\n            setIsLogged(true);\n        }\n    };\n\n    const handleLogOut = (e) => {\n        e.preventDefault();\n        setError(\"\");\n        setUsername(\"\");\n        setPassword(\"\");\n        setPasswordVerif(\"\");\n        setIsLogged(false);\n        setShowForm(1);\n    };\n\n    return (\n        <>\n            {error.length ? <p className=\"error\">{error}</p> : null}\n            {showForm === 1 ? (\n                <form onSubmit={handleLogin}>\n                    <label htmlFor=\"username\">\n                        <span>Username:</span>\n                        <input\n                            type=\"text\"\n                            name=\"username\"\n                            id=\"username\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                        />\n                    </label>\n                    <label htmlFor=\"password\">\n                        <span>Password:</span>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                    </label>\n                    <button>Submit</button>\n                    <p>\n                        Don't have an account?{\" \"}\n                        <a href=\"#form-2\" onClick={switchForm}>\n                            Register here\n                        </a>\n                    </p>\n                </form>\n            ) : showForm === 2 ? (\n                <form onSubmit={handleRegister}>\n                    <label htmlFor=\"username\">\n                        <span>Username:</span>\n                        <input\n                            type=\"text\"\n                            name=\"username\"\n                            id=\"username\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                        />\n                    </label>\n                    <label htmlFor=\"password\">\n                        <span>Password:</span>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"password\"\n                            value={password}\n                            onChange={handleFirstPassword}\n                        />\n                    </label>\n                    <label htmlFor=\"password-verif\">\n                        <span>Retype password:</span>\n                        <input\n                            type=\"password\"\n                            name=\"password-verif\"\n                            id=\"password-verif\"\n                            value={passwordVerif}\n                            onChange={handleSecondPassword}\n                        />\n                    </label>\n                    <button>Submit</button>\n                    <p>\n                        Already have an account?{\" \"}\n                        <a href=\"#form-1\" onClick={switchForm}>\n                            Login here\n                        </a>\n                    </p>\n                </form>\n            ) : null}\n            {isLogged ? (\n                <>\n                    <h1>Hello, {username}</h1>\n                    <p>\n                        <a href=\"/\" onClick={handleLogOut}>\n                            Log out\n                        </a>\n                    </p>\n                </>\n            ) : null}\n        </>\n    );\n};\n\nexport default App;\n","import React, { StrictMode } from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"./index.css\";\n\nimport App from \"./App.jsx\";\n\nrender(\n    <StrictMode>\n        <App />\n    </StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}